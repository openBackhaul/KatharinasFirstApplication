@startuml
skinparam responseMessageBelowArrow true

title Controller notifications informing about connection state or config changes per device

'receive the notification
"ODL:/rests/notif/{mount-name}?notificationType=device" -> "MWDI": {notification-message}
"MWDI" --> "ODL:/rests/notif/{mount-name}?notificationType=device"

note over "MWDI"
 <u>message indicates:</u>
 - <b>connection-status-change</b> 
   to "device disconnected": delete
 - <b>config-change</b>: update changed 
   attribute in DB with provided value
 - <b>others</b>: ignore
end note
note over "ElasticSearch": action-required: delete or update, \nupdate-parameters omitted/null in case of deletion


"MWDI" --> "ElasticSearch": {mount-name, action-required, [path-to-updated-config-attribute-in-controlConstruct, updated-config-value]}
"ElasticSearch" --> "MWDI": {}

note over "MWDI": case <b>"device disconnected"</b>: \nunsubscribe at Controller (via DELETE)"

"MWDI" -> "ODL:/rests/notif/{mount-name}?notificationType=device": {mount-name}
"ODL:/rests/notif/{mount-name}?notificationType=device" --> "MWDI": {}

note over "MWDI": case <b>"config-change"</b>: \nsend notification about new/updated CC
"MWDI" -> "/v1/inform-about-new-control-construct": {mount-name}
"/v1/inform-about-new-control-construct" --> "MWDI": {}

left footer \n\nThe subscribing to the Controller for a device is done as part of the device-list sync, this forwarding only handles unsubscribing or config change actions


@enduml