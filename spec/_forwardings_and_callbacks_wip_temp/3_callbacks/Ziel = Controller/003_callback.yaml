-
  # subscribe at Controller for any device added to the MWDI (GET <path>), has to be done invidually for each device
  # - forwarding-name: CyclicOperationCausesSubscribingAtControllerForDeviceUpdateNotifications
  #   uuid: mwdi-1-0-0-op-fc-is-003
  #   forwarding-type: InvariantProcessSnippet # not set to subscription as MWDI is not offering a subscription, but only consuming subscription from other application
  #   management-requests:
  #     operation-client-update:
  #     fc-port-update:
  #     fc-port-deletion:
  #     operation-client-deletion:
  #   initiating-requests:
  #     - server-name: /v1/embed-yourself
  #       uuid: mwdi-1-0-0-op-s-bm-001
  #   consequent-requests:
  #     - client-name: ODL://rests/notif/{mount-name}?notificationType=device #GET
  #       uuid: mwdi-1-0-0-op-c-is-c-4-0-2-022
#
# - wo platzieren: /v1/embed-yourself  
# - conseq-req: Controller! -> selbst ausformulieren
#
# Output of the request is a streamed text, see example:
#----------------------------------
# : ping
# data : Device disconnected
# : ping
# : ping
# data: Device connected
# data: {<long change message}
#----------------------------------
# im Postman ausprobiert, es wurde nichts angezeigt (data ist nur event-basiert - ok, aber ping war auch nicht da)
# Rückfrage an Arun und Senthilvel
# außerdem: DELETE geht nicht (not allowed); ggf. ist dafür ein bestimmter User nötig (probe-user1 geht jedenfalls nicht)
#

        CyclicOperationCausesSubscribingAtControllerForDeviceUpdateNotifications:
          url: #[/core-model-1-4:control-construct/logical-termination-point=mwdi-1-0-0-tcp-c-c-4-0-2-000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-protocol]://[/core-model-1-4:control-construct/logical-termination-point=mwdi-1-0-0-tcp-c-c-4-0-2-000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/domain-name or /core-model-1-4:control-construct/logical-termination-point=mwdi-1-0-0-tcp-c-c-4-0-2-000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-address/ip-address/ipv-4-address]:[/core-model-1-4:control-construct/logical-termination-point=mwdi-1-0-0-tcp-c-c-4-0-2-000/layer-protocol=0/tcp-client-interface-1-0:tcp-client-interface-pac/tcp-client-interface-configuration/remote-port][/core-model-1-4:control-construct/logical-termination-point=mwdi-1-0-0-op-c-is-c-4-0-2-022/layer-protocol=0/operation-client-interface-1-0:operation-client-interface-pac/operation-client-interface-configuration/operation-name]
            get:
              parameters:
                # unclear if these are needed as they are only relevant inside the appFramework, but not for the Controller 
                - $ref: '#/components/parameters/user'
                - $ref: '#/components/parameters/originator'
                - $ref: '#/components/parameters/x-correlator'
                - $ref: '#/components/parameters/trace-indicator'
                - $ref: '#/components/parameters/customer-journey'                
              responses:
                '200':
                  description: '(Subscribed to notification about a connection-state or config-change from the Controller'
                  content:
                    text/event-stream: # notification messages are streamed by the Controller 
                      schema:
                        type: object
                        properties:
                          data:
                            type: string
                            description: 'Information about connection-state change or config-change (path to changed attribute and new value)'
                        example:
                          data: 'Device connected'
                          #data: 'Device disconnected'
                          #data: '{<config-change-notification-info>:[{<path-to-changed-parameter>/new-value}],<trailing-info-including-timestamp>'
                  headers:
                    # after subscription data is sent as a stream
                    # content-type=text/event-stream and transfer-encoding=chunked
                    transfer-encoding:
                      schema:
                        type: string
                        example: 'chunked'
                      description: 'The transfer-encoding (chunked) for the notifications received from the Controller'  
              '4XX':
                $ref: '#/components/responses/responseForErroredServiceRequests'
              '500':
                $ref: '#/components/responses/responseForErroredServiceRequests'
              default:
                $ref: '#/components/responses/responseForErroredServiceRequests'